#!/opt/local/bin/expect

# $Id: setRoot,v 1.11 2012/08/05 03:20:34 larry Exp $

foreach host $argv {
	# If we can get in to this host as root, we're already set up and can skip it
	spawn ssh "root@$host"
	expect -re "root(@|])" { send "exit\r"; puts ""; continue }
	# Have to get in as 'admin' first, then get a root shell
	spawn ssh "admin@$host"
	expect "Password:"
	send "Sourcefire\r"
	expect "Password:" { send "sf\r" }
	expect "Password:" { send "password\r" }

	#  Might be a CLI box, so we have to get to expert mode first, then to root
	expect "> " { send "expert\r" }

	expect -re "admin(@|])"
	send "sudo -i\r"
	#  This is conditional because sudo might have been run recently enough not
	#  to need a password
	expect "Password:" { send "Sourcefire\r" }
	expect "Password:" { send "sf\r" }
	expect "Password:" { send "password\r" }
	expect -re "root(@|])"
	send "perl -pi -e 's/PermitRootLogin no/PermitRootLogin without-password/' /etc/ssh/sshd_config /usr/local/sf/htdocs/templates/html_templates/pam/sshd_config.tt /usr/local/sf/htdocs/html_templates/pam/sshd_config.tt /usr/local/sf/htdocs/localization/en_US/templates/html_templates/pam/sshd_config.tt\r"

	expect -re "root(@|])"
	send "/etc/rc.d/init.d/sshd restart\r"
	expect -re "root(@|])"
	send "grep larry@apple .ssh/authorized_keys > /dev/null 2>&1\r"
	expect -re "root(@|])"
	send "echo $?\r"
	expect "\[0-9]\r\n"
	if { $expect_out(0,string) > 0 } {
		send "scp larry@10.5.45.18:.ssh/authorized_keys .temp\r"
		expect "connecting (yes/no)?" { send "yes\r" }
		expect "password:" { send "larry\r" }
		expect -re "root(@|])"
		send "cat .temp >> /root/.ssh/authorized_keys\r"
		expect -re "root(@|])"
		send "rm -f /root/.temp\r"
	}
	send "ls -l /boot > /root/boot.txt\r"
	expect -re "root(@|])"
	send "cat /root/boot.txt\r"
	expect -re "root(@|])"
	send "exit\r"
	# Again have to account for the possibility of a CLI box
	expect -re "admin(@|])" { send "exit\r" }
	expect "> " { send "exit\r" }
	puts "\n"

}
